Metadata-Version: 2.2
Name: savefile
Version: 0.1.0
Summary: A utility package to save various data formats and zip them.
Home-page: https://github.com/anurag629/savefile
Author: Anurag Verma
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: matplotlib
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# SaveFile Utility Package

## 📝 Description
**SaveFile** is a Python utility package that allows you to **save various data formats** (CSV, TXT, JSON, NumPy arrays, Pickle, Matplotlib figures, etc.) and optionally **zip** them. It helps in organizing and storing different file types efficiently.

---

## 📦 Installation

First, clone the repository then install the package using `pip`:

```sh
cd savefile
pip install .
```

---

## 🚀 Usage

### Import the package:
```python
from savefile import save_file
```

### ✅ **Saving a Pandas DataFrame as CSV**
```python
import pandas as pd

df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})
save_file(df, "dataframe", base_dir="output", zip_file=False)
```
> 📌 Saves as **output/dataframe.csv**

---

### ✅ **Saving a NumPy array as `.npy`**
```python
import numpy as np

arr = np.array([1, 2, 3, 4, 5])
save_file(arr, "array", base_dir="output")
```
> 📌 Saves as **output/array.npy**

---

### ✅ **Saving a Dictionary as JSON**
```python
data_dict = {"name": "Anurag", "age": 25}
save_file(data_dict, "info", base_dir="output")
```
> 📌 Saves as **output/info.json**

---

### ✅ **Saving Text as a TXT File**
```python
save_file("Hello, world!", "text", base_dir="output")
```
> 📌 Saves as **output/text.txt**

---

### ✅ **Saving a Pickle File**
```python
binary_data = b"Some binary data"
save_file(binary_data, "binary_data", base_dir="output")
```
> 📌 Saves as **output/binary_data.pkl**

---

### ✅ **Saving a Matplotlib Figure as PNG**
```python
import matplotlib.pyplot as plt

fig, ax = plt.subplots()
ax.plot([1, 2, 3, 4], [10, 20, 25, 30])
ax.set_title("Sample Plot")

save_file(fig, "plot", base_dir="output", img_format="png")
```
> 📌 Saves as **output/plot.png**

---

### ✅ **Saving a Matplotlib Figure as PDF**
```python
save_file(fig, "plot_pdf", base_dir="output", img_format="pdf")
```
> 📌 Saves as **output/plot_pdf.pdf**

---

### ✅ **Saving and Zipping a File**
```python
save_file(df, "dataframe", base_dir="output", zip_file=True)
```
> 📌 Saves as **output/dataframe.csv.zip**

---

## ⚙️ **Supported File Formats**
| Data Type          | File Format  | Example |
|--------------------|-------------|---------|
| Pandas DataFrame  | `.csv`       | `"dataframe.csv"` |
| NumPy Array      | `.npy`       | `"array.npy"` |
| Dictionary/List  | `.json`      | `"info.json"` |
| String (Text)    | `.txt`       | `"text.txt"` |
| Binary Data      | `.pkl`       | `"binary_data.pkl"` |
| Matplotlib Figure | `.png`, `.pdf`, `.jpg` | `"plot.png"` |

---

## 🛠️ **Features**
✅ Save multiple data types effortlessly  
✅ Supports **Pandas DataFrames, NumPy arrays, JSON, text, binary files, and Matplotlib figures**  
✅ **Optional zipping** for easy storage  
✅ Flexible **base directory** for saving files  
✅ Choose **Matplotlib image format** (`png`, `jpg`, `pdf`, etc.)  
✅ **Auto-creates directories** if they don’t exist  

---
